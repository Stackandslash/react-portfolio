{"version":3,"sources":["images/employeecards.png","images/scheduler.png","images/weatherdashboard.png","assets/Pictorial.jpg","images/proj1shot.png","components/navBar/navBar.js","components/about/about.js","components/contact/contact.js","components/projectcard/projectcard.js","components/portfolio/portfolio.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navigation","props","Navbar","variant","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","to","about","Jumbotron","src","require","alt","contact","class","href","projectcard","Card","text","style","width","Body","Title","name","Text","description","Button","link","portfolio","CardDeck","image","employeecards","weatherdashboard","scheduler","fixed","App","Container","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c892650e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/employeecards.1e5392a5.png\";","module.exports = __webpack_public_path__ + \"static/media/scheduler.20d6527c.png\";","module.exports = __webpack_public_path__ + \"static/media/weatherdashboard.80240572.png\";","module.exports = __webpack_public_path__ + \"static/media/Pictorial.5f997356.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proj1shot.072fc433.png\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction navigation(props) {\r\n  return (\r\n    <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand>Logan</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavLink className=\"navbar-dark navbar-nav nav-link\" to=\"/\">About</NavLink>\r\n          <NavLink className=\"navbar-dark navbar-nav nav-link\" to=\"/portfolio\">Portfolio</NavLink>\r\n          <NavLink className=\"navbar-dark navbar-nav nav-link\" to=\"/contact\">Contact</NavLink>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default navigation;\r\n","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n//import \"./style.css\";\r\n\r\nfunction about(props) {\r\n  return (\r\n    <div className=\"About\">\r\n        <Jumbotron>\r\n          <h1 className=\"display-4\">About Logan</h1>\r\n          <hr className=\"my-4\" />\r\n          <div className=\"col-8 offset-2\">\r\n        <img className = \"img-thumbnail mr-3 mb-1 img-fluid\" src={require(\"../../assets/Pictorial.jpg\")} alt = \"This will be me, but right now it's cats.\"/>\r\n      </div>\r\n          <p>\r\n          Logan is a guy who has continued to code at least 5 days a week, and has been doing so for some time now. He enjoys doing so, as well as video games, writing, and writing video games. His interest in video games about writing is yet to be established. He is shown here with his wife, with whom he frequently writes.\r\n          </p>\r\n        </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default about;","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n//import \"./style.css\";\r\n\r\nfunction contact(props) {\r\n  return (\r\n    <div className=\"About\">\r\n        <Jumbotron>\r\n          <h1 className=\"header\">Contact Me</h1>\r\n          <hr class=\"my-4\" />\r\n          <p>I can be contacted through <a href = \"https://www.linkedin.com/in/logan-lake-8b012198/\" class = \"font-weight-bold\">LinkedIn</a> and <a href = \"https://github.com/Stackandslash\" class = \"font-weight-bold\">GitHub</a>.</p>\r\n          <p>My current <a class = \"font-weight-bold\" href = \"./assets/LLResume2020.pdf\">Resume</a> is also available directly.</p>\r\n        </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default contact;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nfunction projectcard(props) {\r\n  return (\r\n    <div className = \"cardDiv\">\r\n      <Card bg=\"secondary\" text=\"light\" style={{ width: \"18rem\" }}>\r\n        {/* <Card.Img variant=\"top\" src={window.location.origin + \"/\" + props.image} /> */}\r\n        <Card.Body>\r\n          <Card.Title>{props.name}</Card.Title>\r\n          <Card.Text>{props.description}</Card.Text>\r\n          <Button variant=\"dark\" href={props.link} >See it in Action</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default projectcard;\r\n","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport ProjectCard from \"../projectcard/projectcard.js\";\r\nimport projects from \"../../assets/projects.json\";\r\nimport employeecards from \"../../images/employeecards.png\";\r\nimport proj1shot from \"../../images/proj1shot.png\";\r\nimport scheduler from \"../../images/scheduler.png\";\r\nimport weatherdashboard from \"../../images/weatherdashboard.png\";\r\n//import \"./style.css\";\r\n\r\n\r\n\r\nfunction portfolio(props) {\r\n  return (\r\n    <div className=\"About\">\r\n        <Jumbotron>\r\n          <h1 className=\"header\">My Portfolio</h1>\r\n          <hr className=\"my-4\" />\r\n          <CardDeck>\r\n          <ProjectCard\r\n            name=\"Employee Cards\"\r\n            image={employeecards}\r\n            link=\"https://github.com/Stackandslash/employee-summary/blob/master/README.md\"\r\n            description=\"This command-line application creates a page of employee cards for your site, based on your specifications.\"\r\n          />\r\n          <ProjectCard\r\n            name=\"Weather Dashboard\"\r\n            image={weatherdashboard}\r\n            link=\"https://stackandslash.github.io/weather-dash/\"\r\n            description=\"This application is a simple way to find weather conditions around the country.\"\r\n          />\r\n          <ProjectCard\r\n            name=\"Scheduler\"\r\n            image={scheduler}\r\n            link=\"https://stackandslash.github.io/day-planner-w3d4/\"\r\n            description=\"This application is a quick option to make and save notes by the hour.\"\r\n          />\r\n          </CardDeck>\r\n        </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default portfolio;","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./style.css\";\r\n\r\nfunction navigation(props) {\r\n  return (\r\n    <Navbar variant=\"dark\" bg=\"dark\" fixed = \"bottom\" className=\"footer-centered\">\r\n      <Navbar.Text>Logan's Portfolio - Copyright information will go here, projects permitting.</Navbar.Text>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default navigation;","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Navigation from \"./components/navBar/navBar\";\nimport About from \"./components/about/about\";\nimport Contact from \"./components/contact/contact\";\nimport Portfolio from \"./components/portfolio/portfolio\";\nimport Footer from \"./components/footer/footer\";\n\n\nimport Container from \"react-bootstrap/Container\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n        <Navigation />\n      <Container className=\"p-3\">\n        <Switch>\n          <Route path=\"/about\">\n          <About />\n          </Route>\n          <Route path=\"/contact\">\n          <Contact />\n          </Route>\n          <Route path=\"/portfolio\">\n          <Portfolio />\n          </Route>\n          <Route path=\"/\">\n          <About />\n          </Route>\n        </Switch>\n        <Footer />\n      </Container>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}